{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Limon\\\\Downloads\\\\MealMentor\\\\frontend\\\\src\\\\Components\\\\Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport AddEventModal from './AddEventModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const calendarRef = useRef(null);\n  const onEventAdded = event => {\n    const calendarApi = calendarRef.current.getApi();\n    calendarApi.addEvent(event);\n    setModalOpen(false); // Close the modal after adding the event\n  };\n  async function handleEventAdd(Event) {\n    return undefined;\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalOpen(true),\n      children: \"Add Meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        zIndex: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        ref: calendarRef,\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        eventAdd: event => handleEventAdd(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false) // Close the modal when requested\n      ,\n      onEventAdded: event => onEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Schedule, \"P1sS6JlFBJvTJg/cqCqNvK9WSMY=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useRef","useState","FullCalendar","dayGridPlugin","AddEventModal","jsxDEV","_jsxDEV","Schedule","_s","modalOpen","setModalOpen","calendarRef","onEventAdded","event","calendarApi","current","getApi","addEvent","handleEventAdd","Event","undefined","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","position","zIndex","ref","plugins","initialView","eventAdd","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Limon/Downloads/MealMentor/frontend/src/Components/Schedule.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport AddEventModal from './AddEventModal';\r\n\r\nexport default function Schedule() {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const calendarRef = useRef(null);\r\n\r\n  const onEventAdded = event => {\r\n    const calendarApi = calendarRef.current.getApi();\r\n    calendarApi.addEvent(event);\r\n    setModalOpen(false); // Close the modal after adding the event\r\n  };\r\n\r\n  async function handleEventAdd(Event) {\r\n    return undefined; \r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <button onClick={() => setModalOpen(true)}>Add Meal</button>\r\n\r\n      <div style={{ position: \"relative\", zIndex: 0 }}>\r\n        <FullCalendar\r\n          ref={calendarRef}\r\n          plugins={[dayGridPlugin]}\r\n          initialView=\"dayGridMonth\"\r\n          eventAdd={event => handleEventAdd(event)}\r\n        />\r\n      </div>\r\n\r\n      <AddEventModal\r\n        isOpen={modalOpen}\r\n        onClose={() => setModalOpen(false)} // Close the modal when requested\r\n        onEventAdded={event => onEventAdded(event)}\r\n      />\r\n    </section>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMU,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMY,YAAY,GAAGC,KAAK,IAAI;IAC5B,MAAMC,WAAW,GAAGH,WAAW,CAACI,OAAO,CAACC,MAAM,CAAC,CAAC;IAChDF,WAAW,CAACG,QAAQ,CAACJ,KAAK,CAAC;IAC3BH,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,eAAeQ,cAAcA,CAACC,KAAK,EAAE;IACnC,OAAOC,SAAS;EAClB;EAEA,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAAC,IAAI,CAAE;MAAAW,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE5DpB,OAAA;MAAKqB,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAE,CAAE;MAAAR,QAAA,eAC9Cf,OAAA,CAACJ,YAAY;QACX4B,GAAG,EAAEnB,WAAY;QACjBoB,OAAO,EAAE,CAAC5B,aAAa,CAAE;QACzB6B,WAAW,EAAC,cAAc;QAC1BC,QAAQ,EAAEpB,KAAK,IAAIK,cAAc,CAACL,KAAK;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENpB,OAAA,CAACF,aAAa;MACZ8B,MAAM,EAAEzB,SAAU;MAClB0B,OAAO,EAAEA,CAAA,KAAMzB,YAAY,CAAC,KAAK,CAAE,CAAC;MAAA;MACpCE,YAAY,EAAEC,KAAK,IAAID,YAAY,CAACC,KAAK;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAAClB,EAAA,CAlCuBD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}